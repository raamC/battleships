{"version":3,"file":"bundle.js","sources":["src/Ship.js","src/Grid.js","src/Canvas.js","src/main.js"],"sourcesContent":["class Ship {\n    constructor(length) {\n        this.length = length;\n        this.isHorizontal = this.getOrientation();\n        this.topLeftPosition = { row: 0, col: 0 };\n    }\n\n    getOrientation() {\n        return (Math.round(Math.random())) === 1 ? true : false;\n    }\n}\n\nexport {Ship};\n","import {Ship} from'./Ship.js';\n\nclass Grid {\n    constructor(rows, cols, shipsToPlace) {\n        this.rows = rows;\n        this.cols = cols;\n        this.shipsToPlace = shipsToPlace;\n        this.map = this.createMap();\n        this.placedShips = this.getPlacedShips();\n        this.placedMap = this.displayShips();\n    }\n\n    getRowCounts() {\n        return this.placedMap.map(r => this.getCounts(r))\n    }\n\n    getColCounts() {\n        // transposes array\n        const cols = this.placedMap[0].map((col, i) => this.placedMap.map(row => row[i]));\n        return cols.map(c => this.getCounts(c))\n    }\n\n    getCounts(set) {\n        return set.filter(s => s !== 0).length\n    }\n\n    createMap() {\n        return Array(this.rows).fill().map(() => Array(this.cols).fill(0));\n    }\n\n    displayShips() {\n        let map = this.createMap();\n        this.placedShips.map(s => {\n            for (let i = 0; i < s.length; i++) {\n\n                if (s.length === 1) {\n                    map[s.topLeftPosition.row][s.topLeftPosition.col + i] = 'S';\n                } else if (i === 0) {\n                    s.isHorizontal\n                        ? map[s.topLeftPosition.row][s.topLeftPosition.col + i] = 'L'\n                        : map[s.topLeftPosition.row + i][s.topLeftPosition.col] = 'T';\n                } else if (i === s.length - 1) {\n                    s.isHorizontal\n                        ? map[s.topLeftPosition.row][s.topLeftPosition.col + i] = 'R'\n                        : map[s.topLeftPosition.row + i][s.topLeftPosition.col] = 'B';\n                } else {\n                    s.isHorizontal\n                        ? map[s.topLeftPosition.row][s.topLeftPosition.col + i] = 'M'\n                        : map[s.topLeftPosition.row + i][s.topLeftPosition.col] = 'M';\n                }\n            }\n        })\n        return map;\n    }\n\n    getPlacedShips() {\n        const placedShips = [];\n        this.shipsToPlace.map(s => placedShips.push(this.placeShip(s)));\n        return placedShips;\n    }\n\n    placeShip(shipLength) {\n        let ship = new Ship(shipLength);\n        let isPositionValid = false;\n        let topLeftPosition = { row: 0, col: 0 };\n        while (isPositionValid === false) {\n            if (ship.isHorizontal) {\n                topLeftPosition.row = this.getRandomInt(0, this.rows);\n                topLeftPosition.col = this.getRandomInt(0, (this.cols - shipLength + 1));\n            } else {\n                topLeftPosition.row = this.getRandomInt(0, (this.rows - shipLength + 1));\n                topLeftPosition.col = this.getRandomInt(0, this.cols);\n            }\n            isPositionValid = this.checkIfPositionIsValid(ship, topLeftPosition);\n        }\n        ship.topLeftPosition = topLeftPosition;\n        this.updateMap(ship, topLeftPosition);\n        return ship;\n    }\n\n    checkIfPositionIsValid(ship, topLeftPosition) {\n        let checkTotal = 0;\n        for (let i = 0; i < ship.length; i++) {\n            if (ship.isHorizontal) {\n                checkTotal += (this.map[topLeftPosition.row][topLeftPosition.col + i])\n            } else {\n                checkTotal += (this.map[topLeftPosition.row + i][topLeftPosition.col])\n            }\n        }\n        return (checkTotal === 0) ? true : false\n    }\n\n    updateMap(ship) {\n        for (let j = -1; j < 2; j++) {\n            for (let i = -1; i < ship.length + 1; i++) {\n                if (ship.isHorizontal) {\n                    this.updateIfOnMap(ship.topLeftPosition.row + j, ship.topLeftPosition.col + i)\n                } else {\n                    this.updateIfOnMap(ship.topLeftPosition.row + i, ship.topLeftPosition.col + j)\n                }\n            }\n        }\n    }\n\n    updateIfOnMap(row, col) {\n        if (row >= 0 && row < this.rows && col >= 0 && col < this.cols) {\n            this.map[row][col] = 1\n        }\n    }\n\n    getRandomInt(min, max) {\n        // Returns a random number between min (inclusive) and max (exclusive)\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n}\n\nexport {Grid};\n","class Canvas {\n    constructor(grid, styleParams, difficulty) {\n        this.grid = grid;\n        this.styleParams = styleParams;\n        this.difficulty = difficulty;\n        this.canvasElement = document.getElementById('canvas');\n        this.ctx = this.canvasElement.getContext(\"2d\");\n    }\n\n    draw () {\n        this.drawBlocks(this.grid.rows, this.grid.cols);\n        this.drawCounts();\n        this.drawGrid(this.grid.rows, this.grid.cols);\n    }\n\n    drawCounts() {\n        const rowCounts = this.grid.getRowCounts();\n        const colCounts = this.grid.getColCounts();\n\n        rowCounts.map((rc, index) =>\n            this.drawCount( rc,\n                this.grid.cols * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing,\n                index * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing))\n\n        colCounts.map((cc, index) =>\n            this.drawCount(cc,\n                index * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing,\n                this.grid.rows * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing\n            ))\n    }\n\n    drawBlocks(rows, columns) {\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                const x = c * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing;\n                const y = r * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing;\n                if (Math.random() < this.difficulty) {\n                    this.drawBlock(this.grid.placedMap[r][c], x, y)\n                }\n            }\n        }\n    }\n\n    drawGrid(rows, columns) {\n        for (let c = 0; c <= columns; c++) {\n            for (let r = 0; r <= rows; r++) {\n                const x = r * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing;\n                const y = c * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing;\n                this.drawLine(\n                    c * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing,\n                    this.styleParams.spacing / 2 + 1,\n                    0,\n                    rows * (this.styleParams.spacing + this.styleParams.blockSize))\n                this.drawLine(\n                    this.styleParams.spacing / 2 + 1,\n                    r * (this.styleParams.spacing + this.styleParams.blockSize) + this.styleParams.spacing,\n                    columns * (this.styleParams.spacing + this.styleParams.blockSize),\n                    0)\n            }\n        }\n    }\n\n    drawCount(count, x, y) {\n        this.ctx.font = this.styleParams.countFontSize + \"px Arial\";\n        this.ctx.fillStyle = 'black';\n        this.ctx.textAlign = \"center\";\n        this.ctx.textBaseline = \"middle\";\n        this.ctx.fillText(count, x + this.styleParams.blockSize / 2, y + this.styleParams.blockSize / 2);\n    }\n\n    drawLine(x, y, width, height) {\n        this.ctx.lineWidth = this.styleParams.lineWidth;\n        this.ctx.strokeRect(x, y, width, height);\n    }\n\n    drawBlock(blockValue, x, y) {\n        switch (blockValue) {\n            case 'T':\n                this.drawBlockT(x, y);\n                break;\n            case 'B':\n                this.drawBlockB(x, y);\n                break;\n            case 'L':\n                this.drawBlockL(x, y);\n                break;\n            case 'R':\n                this.drawBlockR(x, y);\n                break;\n            case 'S':\n                this.drawBlockS(x, y);\n                break;\n            case 'M':\n                this.drawBlockM(x, y);\n                break;\n            case 0:\n                this.drawBlock0(x, y);\n                break;\n            default:\n                return;\n        }\n    }\n\n    drawBlockS(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.beginPath();\n        this.ctx.arc(x + this.styleParams.blockSize / 2, y + this.styleParams.blockSize / 2, this.styleParams.blockSize / 2, 0, 2 * Math.PI);\n        this.ctx.fill();\n    }\n\n    drawBlockM(x, y) {\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n    }\n\n    drawBlockT(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.beginPath();\n        this.ctx.arc(x + this.styleParams.blockSize / 2, y + this.styleParams.blockSize, this.styleParams.blockSize / 2, Math.PI, 2 * Math.PI);\n        this.ctx.fill();\n    }\n\n    drawBlockB(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.beginPath();\n        this.ctx.arc(x + this.styleParams.blockSize / 2, y, this.styleParams.blockSize / 2, 0, Math.PI);\n        this.ctx.fill();\n    }\n\n    drawBlockL(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.beginPath();\n        this.ctx.arc(x + this.styleParams.blockSize, y + this.styleParams.blockSize / 2, this.styleParams.blockSize / 2, Math.PI / 2, 3 * Math.PI / 2);\n        this.ctx.fill();\n    }\n\n    drawBlockR(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n\n        this.ctx.fillStyle = this.styleParams.shipColor;\n        this.ctx.beginPath();\n        this.ctx.arc(x, y + this.styleParams.blockSize / 2, this.styleParams.blockSize / 2, 3 * Math.PI / 2, Math.PI / 2);\n        this.ctx.fill();\n    }\n\n    drawBlock0(x, y) {\n        this.ctx.fillStyle = this.styleParams.backgroundColor;\n        this.ctx.fillRect(x, y, this.styleParams.blockSize, this.styleParams.blockSize);\n    }\n}\n\nexport {Canvas};\n","import {Grid} from'./Grid.js';\nimport {Canvas} from'./Canvas.js';\n\nconst rows = 10;\nconst columns = 10;\nconst difficulty = 0.25; // percentage of blocks shown\nconst shipsToPlace = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1]\nlet grid = new Grid(rows, columns, shipsToPlace);\n\nvar styleParams = {\n    backgroundColor: '#33E8FF',\n    shipColor: '#636363',\n    blockSize: 20,\n    countFontSize: 15,\n    lineWidth: 2,\n    spacing: 1,\n};\n\nlet canvas = new Canvas(grid, styleParams, difficulty);\ncanvas.draw();\naddButtons();\nconsole.log(grid.placedMap.map(row => row.map(col => col === 0 ? '_' : col)))\n\nfunction addButtons () {\n    document.getElementById(\"testButton\").addEventListener(\"click\", clickTest);\n    // document.getElementById(\"submitButton\").addEventListener(\"click\", submit);\n}\n\nfunction clickTest() {\n    const x = 1;\n    const y = 1;\n    drawCross(x, y)\n}\n\nfunction drawCross(x, y) {\n    canvas.ctx.font = styleParams.countFontSize + \"px Arial\";\n    canvas.ctx.fillStyle = 'black';\n    canvas.ctx.textAlign = \"center\";\n    canvas.ctx.textBaseline = \"middle\";\n    canvas.ctx.fillText(\"X\", x + styleParams.blockSize / 2, y + styleParams.blockSize / 2);\n}\n\n"],"names":[],"mappings":"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"}